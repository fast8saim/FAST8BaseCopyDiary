// MIT License
//
// Copyright (c) 2023 FAST8.RU
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СформироватьИсторию();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТонкийКлиент Тогда
	ВидКлиента = "Тонкий клиент";
	#КонецЕсли
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
	ВидКлиента = "Толстый клиент";
	#КонецЕсли
    #Если ВебКлиент Тогда
	ВидКлиента = "Веб-клиент";
	#КонецЕсли
	
	СИ = Новый СистемнаяИнформация;
	Платформа = СтрШаблон("%1 %2 %3", ВидКлиента, СИ.ВерсияПриложения, СИ.ТипПлатформы);
	
	ЗаписиСобытий.Область(10, 3, 10, 4).Текст = Платформа;
	Элементы.ЗаписиСобытий.ТекущаяОбласть = ЗаписиСобытий.Область(8, 3, 8, 4);
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "FAST8Дневник_ВведеноСобытие" Тогда
		ДобавитьСобытиеНаСервере(Параметр.Пользователь, Параметр.Описание);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()


#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаписиСобытийОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	ЗарегистрироватьНовоеСобытие();
	
КонецПроцедуры // ЗаписиСобытийОбработкаРасшифровки()

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьСобытие(Команда)
	
	ЗарегистрироватьНовоеСобытие();    
	
КонецПроцедуры // ДобавитьСобытие()

&НаКлиенте
Процедура УказатьДатуАктуальности(Команда)
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("УказатьДатуАктуальностиЗавершение", ЭтотОбъект, Новый Структура("ДатаАктуальности", ДатаАктуальности)), ДатаАктуальности, "Укажите дату актуальности базы");
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьОсновноеНазначение(Команда)
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("УказатьОсновноеНазначениеЗавершение", ЭтотОбъект, Новый Структура("ОсновноеНазначение", ОсновноеНазначение)), ОсновноеНазначение, "Укажите основное назначение копии");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьСобытиеНаСервере(Пользователь, Событие)
	
	FAST8Дневник_ВызовСервера.ДобавитьСобытие(Пользователь, Событие);

	СформироватьИсторию();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьИсторию()

	УстановитьПривилегированныйРежим(Истина);
	
	СохраненнаяДатаПервогоЗапуска = ХранилищеОбщихНастроек.Загрузить("ДатаПервогоЗапуска", "FAST8ДневникКопииБазы",, "FAST8");
	Если СохраненнаяДатаПервогоЗапуска = Неопределено Тогда
		ДатаПервогоЗапуска = ТекущаяДатаСеанса();
		ХранилищеОбщихНастроек.Сохранить("ДатаПервогоЗапуска", "FAST8ДневникКопииБазы", ДатаПервогоЗапуска,, "FAST8");
	Иначе
		ДатаПервогоЗапуска = СохраненнаяДатаПервогоЗапуска;
	КонецЕсли;
	
	Сегодня = НачалоДня(ТекущаяДатаСеанса());
	
	ОсновноеНазначение	= СокрЛП(ХранилищеОбщихНастроек.Загрузить("ОсновноеНазначение", "FAST8ДневникКопииБазы",, "FAST8"));
	
	Если ЗначениеЗаполнено(ОсновноеНазначение) Тогда
		Заголовок = СтрШаблон("%1: история работы с этой копией рабочей базы", Лев(ОсновноеНазначение, 50));
	КонецЕсли;
	
	ДатаАктуальности	= ХранилищеОбщихНастроек.Загрузить("ДатаАктуальности", "FAST8ДневникКопииБазы",, "FAST8");
	ТаблицаСобытий		= ХранилищеОбщихНастроек.Загрузить("События", "FAST8ДневникКопииБазы",, "FAST8");
    Если ТаблицаСобытий <> Неопределено Тогда
		События.Очистить();
		ТаблицаСобытияПользователей = События.Выгрузить();
		ТаблицаВходыВБазу = События.Выгрузить();
		ТаблицаВходыВБазу.Колонки.Добавить("Количество");
		
		Для Каждого СтрокаТЧ Из ТаблицаСобытий Цикл
			Если (СтрокаТЧ.Событие = "Зашел в базу" Или СтрокаТЧ.Событие = "Вошел в базу") И СтрокаТЧ.Дата < Сегодня Тогда
				НовоеСобытие = ТаблицаВходыВБазу.Добавить();
				НовоеСобытие.Дата			= НачалоДня(СтрокаТЧ.Дата);
				НовоеСобытие.Пользователь	= СтрокаТЧ.Пользователь;
				НовоеСобытие.Количество		= 1;
			Иначе
				ЗаполнитьЗначенияСвойств(ТаблицаСобытияПользователей.Добавить(), СтрокаТЧ);				
			КонецЕсли;
		КонецЦикла;
		
		События.Загрузить(ТаблицаСобытияПользователей);
		
		ТаблицаВходыВБазу.Свернуть("Дата, Пользователь", "Количество");
		Для Каждого СтрокаТЧ Из ТаблицаВходыВБазу Цикл
			НовоеСобытие = События.Добавить();
			НовоеСобытие.Дата = СтрокаТЧ.Дата;
			НовоеСобытие.Пользователь = СтрокаТЧ.Пользователь;
			Если СтрокаТЧ.Количество = 1 Тогда
				НовоеСобытие.Событие = "Вошел в базу";
			Иначе
				Склонение = ПолучитьСклоненияСтрокиПоЧислу("раз", СтрокаТЧ.Количество,, "ЧС=Количественное", "ПД=Именительный");
				Раз = ?(Склонение.Количество(), Склонение.Получить(0), "раз");
				НовоеСобытие.Событие = СтрШаблон("Вошел в базу %1", Раз);
			КонецЕсли;
		КонецЦикла;
		
		События.Сортировать("Дата УБЫВ");
	КонецЕсли;
	
	Макет = Обработки.FAST8Дневник_ДневникКопииБазы.ПолучитьМакет("FAST8Дневник_Макет");
	ЗаписиСобытий.Очистить();
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ОсновноеНазначение	= ОсновноеНазначение;
	ОбластьШапка.Параметры.ДатаПервогоЗапуска	= ДатаПервогоЗапуска;
	ОбластьШапка.Параметры.ДатаАктуальности		= ДатаАктуальности;
	ОбластьШапка.Параметры.АдресБазы			= СтрокаСоединенияИнформационнойБазы();
	ОбластьШапка.Параметры.ВерсияКонфигурации	= СтрШаблон("%1 %2", Метаданные.Версия, Метаданные.Синоним);
	ОбластьШапка.Параметры.Платформа			= Платформа;
		
	ЗаписиСобытий.Вывести(ОбластьШапка);
	
	Для Каждого СтрокаТЧ Из События Цикл
		
		Если СтрокаТЧ.Дата < Сегодня Тогда
			ФорматДаты = "ДФ=dd.MM.yyyy ЧЧ:мм";
		Иначе
			ФорматДаты = "ДФ=ЧЧ:мм";
		КонецЕсли;
		Если СтрНачинаетсяС(СтрокаТЧ.Событие, "Вошел в базу") Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСерая");
			Если СтрокаТЧ.Дата < Сегодня Тогда
				ФорматДаты = "ДФ=dd.MM.yyyy";
			КонецЕсли;
		Иначе
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		ОбластьСтрока.Параметры.Заполнить(СтрокаТЧ);
		ОбластьСтрока.Параметры.Дата = Формат(СтрокаТЧ.Дата, ФорматДаты);
		ЗаписиСобытий.Вывести(ОбластьСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УказатьДатуАктуальностиНаСервере()
	
    УстановитьПривилегированныйРежим(Истина);
	ХранилищеОбщихНастроек.Сохранить("ДатаАктуальности", "FAST8ДневникКопииБазы", ДатаАктуальности,, "FAST8");
	
	СформироватьИсторию();
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьДатуАктуальностиЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ДатаАктуальности = ?(Значение = Неопределено, ДополнительныеПараметры.ДатаАктуальности, Значение);
	УказатьДатуАктуальностиНаСервере();

КонецПроцедуры

&НаСервере
Процедура УказатьОсновноеНазначениеНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	ХранилищеОбщихНастроек.Сохранить("ОсновноеНазначение", "FAST8ДневникКопииБазы", ОсновноеНазначение,, "FAST8");
	
	СформироватьИсторию();
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьОсновноеНазначениеЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ОсновноеНазначение = ?(Значение = Неопределено, ДополнительныеПараметры.ОсновноеНазначение, Значение);
	УказатьОсновноеНазначениеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьНовоеСобытие()
	
	ОткрытьФорму("Обработка.FAST8Дневник_ДневникКопииБазы.Форма.FAST8Дневник_ВводСобытия",, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ЗарегистрироватьНовоеСобытие()

#КонецОбласти // СлужебныеПроцедурыИФункции